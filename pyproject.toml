################################################################################
# Project Configuration
################################################################################
[project]
name = "snakemake-orcestrator-api"
version = "0.5.0-rc.1"
description = "Add a short description here"
authors = [
    {name = "Jermiah Joseph", email = "jermiah.joseph@uhn.ca"},
    {name = "Matthew Boccolon", email = "matthew.boccolon@uhn.ca"}
    ]
requires-python = ">= 3.11"
dependencies = []

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

################################################################################
# PIXI Configuration
################################################################################

[tool.pixi.project]
name = "snakemake-orcestrator-api"
channels = ["conda-forge"]
platforms = ["osx-arm64", "linux-64"]

[tool.pixi.system-requirements]
linux = "5.4.203"               # This is for my linux machine

[tool.pixi.pypi-dependencies]
ORCESTRA-api = { path = ".", editable = true }

[tool.pixi.dependencies]
python = "3.12.*"
python-semantic-release = ">=9.4.0,<9.5"
pre-commit = ">=3.7.0,<3.8"
pydantic = ">=2.6.4,<2.7"
motor = ">=3.4.0,<3.5"

[tool.pixi.tasks]
# Basic Tests
test = "python -c 'print(\"Hello, World!\")'"
hello = { cmd = "python -m src.core.main", depends_on = ["test"] }

# testing the __main__ functions in each module
common = "python -m src.db.models.common"
Pipeline = "python -m src.db.models.Pipeline"

################################################################################
# Semantic Release Configuration
################################################################################

[tool.semantic_release]
commit_message = "{version}\n\nAuto-generated by semantic-release."
commit_parser = "angular"
logging_use_named_masks = true
tag_format = "v{version}"
version_toml = [
    "pyproject.toml:project.version",
]

[tool.semantic_release.branches.main]
match = "(main|master)"

[tool.semantic_release.branches.staging]
match = "(stg|staging)"
prerelease_token = "rc"
prerelease = true

[tool.semantic_release.changelog]
changelog_file = "docs/topics/CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "revert",
    "test",
    "merge",
]

minor_tags = ["feat"]

patch_tags = [
    "fix",
    "perf",
    "build",
    "ci",
    "chore",
    "docs",
    "refactor",
    "style",
    "test",
]
