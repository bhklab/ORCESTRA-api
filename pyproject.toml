################################################################################
# Project Configuration
################################################################################
[project]
name = "snakemake-orcestrator-api"
version = "0.7.0"
description = "Add a short description here"
authors = [
    {name = "Jermiah Joseph", email = "jermiah.joseph@uhn.ca"},
    {name = "Matthew Boccolon", email = "matthew.boccolon@uhn.ca"}
    ]
requires-python = ">= 3.11"
dependencies = ["python-json-logger", "pathlib"]



################################################################################
# PIXI Configuration
################################################################################

[tool.pixi.project]
name = "snakemake-orcestrator-api"
version = "0.7.0"
channels = ["conda-forge", "bioconda"]
platforms = ["osx-arm64", "linux-64", "linux-aarch64"]

[tool.pixi.system-requirements]
linux = "5.4.203"               # This is for my linux machine

[tool.pixi.pypi-dependencies]
orcestrator = { path = ".", editable = true }

[tool.pixi.dependencies]
pydantic = ">=2.6.4,<2.7"
motor = ">=3.4.0,<3.5"
snakemake = "==7.32.4"
google-cloud-logging = ">=3.10.0,<3.11"
numpy = ">=1.26.4,<1.27"

[tool.pixi.tasks]

[tool.pixi.environments]
default = { features = ["dev", "build"], solve-group = "default" }
prod = { features = ["prod"], solve-group = "default" }

[tool.pixi.feature.dev.dependencies]
python-semantic-release = ">=9.4.0,<9.5"
pre-commit = ">=3.7.0,<3.8"
pytest = ">=8.1.1,<8.2"
pytest-xdist = ">=3.5.0,<3.6"

[tool.pixi.feature.dev.tasks]
hello = "python -m orcestrator.core.main"
test = "pytest -n auto -vv"
cloudlogs = { cmd = """gcloud logging read labels.app="orcestra-api" --format json"""}

# ------------------------------------------------------------------------------
# Build specific configurations

[tool.pixi.feature.build.dependencies]
build = "*"
hatchling = ">=1.24.2,<1.25"

[tool.pixi.feature.build.tasks]
testpython = "python --version"
build-wheel = { cmd = "python -m build --no-isolation --wheel ." }

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = [
    "orcestrator",
]

# ------------------------------------------------------------------------------
# Production specific configurations
[tool.pixi.feature.prod.host-dependencies]
pip = "*"

[tool.pixi.feature.prod.tasks]
install-dist = "pip install --no-deps --disable-pip-version-check dist/*.whl"

#################################################################################
# Pytest Configuration
#################################################################################

[tool.pytest.ini_options]
filterwarnings = "ignore::DeprecationWarning"


################################################################################
# Semantic Release Configuration
################################################################################

[tool.semantic_release]
commit_message = "{version} [ci skip]\n\nAuto-generated by semantic-release."
commit_parser = "angular"
logging_use_named_masks = true
tag_format = "v{version}"
version_toml = [
    "pyproject.toml:project.version",
    "pyproject.toml:tool.pixi.project.version",
]

[tool.semantic_release.branches.main]
match = "(main|master)"

[tool.semantic_release.changelog]
changelog_file = "docs/topics/CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "revert",
    "test",
    "merge",
]

minor_tags = ["feat"]

patch_tags = [
    "fix",
    "perf",
    "build",
    "ci",
    "chore",
    "docs",
    "refactor",
    "style",
    "test",
]
